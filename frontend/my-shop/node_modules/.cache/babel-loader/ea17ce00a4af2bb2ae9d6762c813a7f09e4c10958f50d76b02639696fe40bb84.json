{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nudel\\\\OneDrive\\\\Documents\\\\JohnBryceProjects\\\\lesson26HW\\\\frontend\\\\my-shop\\\\src\\\\headerComponents\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // Use jwt-decode for token decoding\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn,\n  setUsername\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [username, setUsernameInput] = useState('');\n  const [message, setMessage] = useState(\"Please log in or register\");\n  const SERVER = 'http://127.0.0.1:8000/';\n\n  // Login function\n  const login = () => {\n    axios.post(SERVER + 'login/', {\n      username,\n      password\n    }).then(res => {\n      const {\n        access\n      } = res.data; // Destructure the access token\n      const decoded = jwtDecode(access); // Decode the token to get the username\n      localStorage.setItem('token', access); // Store token in localStorage\n      localStorage.setItem('username', decoded.username); // Store username in localStorage\n      setIsLoggedIn(true); // Update login state\n      setUsername(decoded.username); // Update username state\n    }).catch(error => {\n      setMessage(\"Login failed. Please check your credentials.\");\n    });\n  };\n\n  // Register function\n  const register = () => {\n    axios.post(SERVER + 'register/', {\n      username,\n      password\n    }).then(res => {\n      const {\n        access\n      } = res.data; // Destructure the access token\n      const decoded = jwtDecode(access); // Decode the token to get the username\n      localStorage.setItem('token', access); // Store token in localStorage\n      localStorage.setItem('username', decoded.username); // Store username in localStorage\n      setIsLoggedIn(true); // Update login state\n      setUsername(decoded.username); // Update username state\n      setMessage(\"Registration successful!\");\n    }).catch(error => {\n      if (error.response && error.response.status === 500) {\n        setMessage(\"Username unavailable, please choose a different one.\");\n      } else {\n        setMessage(\"An error occurred. Please try again later.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUsernameInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"DjoZ4k30NTMhSZvppnc69bQ/780=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","jwtDecode","jsxDEV","_jsxDEV","Login","setIsLoggedIn","setUsername","_s","password","setPassword","username","setUsernameInput","message","setMessage","SERVER","login","post","then","res","access","data","decoded","localStorage","setItem","catch","error","register","response","status","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nudel/OneDrive/Documents/JohnBryceProjects/lesson26HW/frontend/my-shop/src/headerComponents/Login.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode';  // Use jwt-decode for token decoding\r\n\r\ninterface LoginProps {\r\n    setIsLoggedIn: (status: boolean) => void;\r\n    setUsername: (username: string | null) => void;  // Add setUsername to update the username state\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setIsLoggedIn, setUsername }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsernameInput] = useState('');\r\n    const [message, setMessage] = useState(\"Please log in or register\");\r\n    const SERVER = 'http://127.0.0.1:8000/';\r\n\r\n    // Login function\r\n    const login = () => {\r\n        axios.post(SERVER + 'login/', { username, password })\r\n            .then(res => {\r\n                const { access } = res.data; // Destructure the access token\r\n                const decoded: any = jwtDecode(access);  // Decode the token to get the username\r\n                localStorage.setItem('token', access); // Store token in localStorage\r\n                localStorage.setItem('username', decoded.username); // Store username in localStorage\r\n                setIsLoggedIn(true); // Update login state\r\n                setUsername(decoded.username); // Update username state\r\n            })\r\n            .catch(error => {\r\n                setMessage(\"Login failed. Please check your credentials.\");\r\n            });\r\n    };\r\n\r\n    // Register function\r\n    const register = () => {\r\n        axios.post(SERVER + 'register/', { username, password })\r\n            .then(res => {\r\n                const { access } = res.data; // Destructure the access token\r\n                const decoded: any = jwtDecode(access);  // Decode the token to get the username\r\n                localStorage.setItem('token', access); // Store token in localStorage\r\n                localStorage.setItem('username', decoded.username); // Store username in localStorage\r\n                setIsLoggedIn(true); // Update login state\r\n                setUsername(decoded.username); // Update username state\r\n                setMessage(\"Registration successful!\");\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 500) {\r\n                    setMessage(\"Username unavailable, please choose a different one.\");\r\n                } else {\r\n                    setMessage(\"An error occurred. Please try again later.\");\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Username: <input onChange={(e) => setUsernameInput(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                Password: <input type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button onClick={login}>Login</button>\r\n                <button onClick={register}>Register</button>\r\n                <h2>{message}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}