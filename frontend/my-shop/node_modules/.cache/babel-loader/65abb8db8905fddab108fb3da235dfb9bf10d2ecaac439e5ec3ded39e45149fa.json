{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nudel\\\\OneDrive\\\\Documents\\\\JohnBryceProjects\\\\lesson26HW\\\\frontend\\\\my-shop\\\\src\\\\headerComponents\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const SERVER = 'http://127.0.0.1:8000/';\n\n  // Login function\n  const login = () => {\n    if (username && password) {\n      axios.post(SERVER + 'login/', {\n        username,\n        password\n      }).then(res => {\n        const {\n          access\n        } = res.data; // Destructure the access token\n        localStorage.setItem('token', access); // Store token in localStorage\n        setIsLoggedIn(true); // Update login state\n        setMessage(''); // Clear the message on successful login\n      }).catch(error => {\n        setMessage('Invalid username or password. Please try again.');\n      });\n    } else {\n      setMessage('Please enter both username and password.');\n    }\n  };\n\n  // Register function\n  const register = () => {\n    if (username && password) {\n      axios.post(SERVER + 'register/', {\n        username,\n        password\n      }).then(res => {\n        const {\n          access\n        } = res.data; // Destructure the access token\n        localStorage.setItem('token', access); // Store token in localStorage\n        setIsLoggedIn(true); // Update login state\n        setMessage(''); // Clear the message on successful registration\n      }).catch(error => {\n        setMessage('Error occurred during registration. Please try again.');\n      });\n    } else {\n      setMessage('Please enter both username and password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUsername(e.target.value),\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"3rXsMUzLlYJW1VCHq2i6buBoAKk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","password","setPassword","username","setUsername","message","setMessage","SERVER","login","post","then","res","access","data","localStorage","setItem","catch","error","register","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nudel/OneDrive/Documents/JohnBryceProjects/lesson26HW/frontend/my-shop/src/headerComponents/Login.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface LoginProps {\r\n    setIsLoggedIn: (status: boolean) => void; // Accept setIsLoggedIn to update login state\r\n}\r\n\r\nconst Login: React.FC<LoginProps> = ({ setIsLoggedIn }) => {\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const SERVER = 'http://127.0.0.1:8000/';\r\n\r\n    // Login function\r\n    const login = () => {\r\n        if (username && password) {\r\n            axios.post(SERVER + 'login/', { username, password })\r\n                .then(res => {\r\n                    const { access } = res.data; // Destructure the access token\r\n                    localStorage.setItem('token', access); // Store token in localStorage\r\n                    setIsLoggedIn(true); // Update login state\r\n                    setMessage(''); // Clear the message on successful login\r\n                })\r\n                .catch(error => {\r\n                    setMessage('Invalid username or password. Please try again.');\r\n                });\r\n        } else {\r\n            setMessage('Please enter both username and password.');\r\n        }\r\n    };\r\n\r\n    // Register function\r\n    const register = () => {\r\n        if (username && password) {\r\n            axios.post(SERVER + 'register/', { username, password })\r\n                .then(res => {\r\n                    const { access } = res.data; // Destructure the access token\r\n                    localStorage.setItem('token', access); // Store token in localStorage\r\n                    setIsLoggedIn(true); // Update login state\r\n                    setMessage(''); // Clear the message on successful registration\r\n                })\r\n                .catch(error => {\r\n                    setMessage('Error occurred during registration. Please try again.');\r\n                });\r\n        } else {\r\n            setMessage('Please enter both username and password.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Username: <input onChange={(e) => setUsername(e.target.value)} value={username} />\r\n            </div>\r\n            <div>\r\n                Password: <input type=\"password\" onChange={(e) => setPassword(e.target.value)} value={password} />\r\n            </div>\r\n            <div>\r\n                <button onClick={login}>Login</button>\r\n                <button onClick={register}>Register</button>\r\n            </div>\r\n            {message && <p>{message}</p>} {/* Display message if exists */}\r\n            <p>Don't have an account? <button onClick={register}>Register</button></p>\r\n            <p>Already have an account? <button onClick={login}>Login</button></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}