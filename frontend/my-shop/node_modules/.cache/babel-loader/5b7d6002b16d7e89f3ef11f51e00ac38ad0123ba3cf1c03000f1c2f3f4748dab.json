{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst CartLogic = ({\n  initialCart\n}) => {\n  _s();\n  const [cart, setCart] = useState(initialCart);\n  useEffect(() => {\n    // Optionally load cart from localStorage or another source\n    const storedCart = JSON.parse(localStorage.getItem('cart') || '[]');\n    setCart(storedCart);\n  }, []);\n  useEffect(() => {\n    // Update localStorage when cart changes\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n  const addToCart = product => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(item => item.id === product.id);\n      if (existingItem) {\n        return prevCart.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + 1\n        } : item);\n      } else {\n        return [...prevCart, {\n          ...product,\n          quantity: 1\n        }];\n      }\n    });\n  };\n  const increaseQuantity = id => {\n    setCart(prevCart => prevCart.map(item => item.id === id ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item));\n  };\n  const decreaseQuantity = id => {\n    setCart(prevCart => prevCart.map(item => item.id === id && item.quantity > 1 ? {\n      ...item,\n      quantity: item.quantity - 1\n    } : item));\n  };\n  const removeItem = id => {\n    setCart(prevCart => prevCart.filter(item => item.id !== id));\n  };\n  const clearCart = () => {\n    setCart([]); // Empty the cart\n  };\n  return {\n    cart,\n    addToCart,\n    increaseQuantity,\n    decreaseQuantity,\n    removeItem,\n    clearCart\n  };\n};\n_s(CartLogic, \"Vsrdre3Q6v7l8yaUgqwCqpe6+oM=\");\n_c = CartLogic;\nexport default CartLogic;\nvar _c;\n$RefreshReg$(_c, \"CartLogic\");","map":{"version":3,"names":["useState","useEffect","CartLogic","initialCart","_s","cart","setCart","storedCart","JSON","parse","localStorage","getItem","setItem","stringify","addToCart","product","prevCart","existingItem","find","item","id","map","quantity","increaseQuantity","decreaseQuantity","removeItem","filter","clearCart","_c","$RefreshReg$"],"sources":["C:/Users/nudel/OneDrive/Documents/JohnBryceProjects/lesson26HW/frontend/my-shop/src/bodyComponents/CartLogic.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\ntype Product = {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  // Add other properties for the product if needed\r\n};\r\n\r\ninterface CartLogicProps {\r\n  initialCart: Product[];\r\n}\r\n\r\nconst CartLogic: React.FC<CartLogicProps> = ({ initialCart }) => {\r\n  const [cart, setCart] = useState<Product[]>(initialCart);\r\n\r\n  useEffect(() => {\r\n    // Optionally load cart from localStorage or another source\r\n    const storedCart = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    setCart(storedCart);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Update localStorage when cart changes\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  const addToCart = (product: Product) => {\r\n    setCart((prevCart) => {\r\n      const existingItem = prevCart.find((item) => item.id === product.id);\r\n      if (existingItem) {\r\n        return prevCart.map((item) =>\r\n          item.id === product.id\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        );\r\n      } else {\r\n        return [...prevCart, { ...product, quantity: 1 }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const increaseQuantity = (id: number) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item.id === id ? { ...item, quantity: item.quantity + 1 } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const decreaseQuantity = (id: number) => {\r\n    setCart((prevCart) =>\r\n      prevCart.map((item) =>\r\n        item.id === id && item.quantity > 1\r\n          ? { ...item, quantity: item.quantity - 1 }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const removeItem = (id: number) => {\r\n    setCart((prevCart) => prevCart.filter((item) => item.id !== id));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]); // Empty the cart\r\n  };\r\n\r\n  return {\r\n    cart,\r\n    addToCart,\r\n    increaseQuantity,\r\n    decreaseQuantity,\r\n    removeItem,\r\n    clearCart,\r\n  };\r\n};\r\n\r\nexport default CartLogic;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAc3C,MAAMC,SAAmC,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAYG,WAAW,CAAC;EAExDF,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IACnEL,OAAO,CAACC,UAAU,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAENN,SAAS,CAAC,MAAM;IACd;IACAS,YAAY,CAACE,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACR,IAAI,CAAC,CAAC;EACpD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMS,SAAS,GAAIC,OAAgB,IAAK;IACtCT,OAAO,CAAEU,QAAQ,IAAK;MACpB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACpE,IAAIH,YAAY,EAAE;QAChB,OAAOD,QAAQ,CAACK,GAAG,CAAEF,IAAI,IACvBA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAClB;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;QAAE,CAAC,GACxCH,IACN,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,QAAQ,EAAE;UAAE,GAAGD,OAAO;UAAEO,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIH,EAAU,IAAK;IACvCd,OAAO,CAAEU,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEF,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGD,IAAI;MAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;IAAE,CAAC,GAAGH,IAC9D,CACF,CAAC;EACH,CAAC;EAED,MAAMK,gBAAgB,GAAIJ,EAAU,IAAK;IACvCd,OAAO,CAAEU,QAAQ,IACfA,QAAQ,CAACK,GAAG,CAAEF,IAAI,IAChBA,IAAI,CAACC,EAAE,KAAKA,EAAE,IAAID,IAAI,CAACG,QAAQ,GAAG,CAAC,GAC/B;MAAE,GAAGH,IAAI;MAAEG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAG;IAAE,CAAC,GACxCH,IACN,CACF,CAAC;EACH,CAAC;EAED,MAAMM,UAAU,GAAIL,EAAU,IAAK;IACjCd,OAAO,CAAEU,QAAQ,IAAKA,QAAQ,CAACU,MAAM,CAAEP,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClE,CAAC;EAED,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtBrB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;EACf,CAAC;EAED,OAAO;IACLD,IAAI;IACJS,SAAS;IACTS,gBAAgB;IAChBC,gBAAgB;IAChBC,UAAU;IACVE;EACF,CAAC;AACH,CAAC;AAACvB,EAAA,CA/DIF,SAAmC;AAAA0B,EAAA,GAAnC1B,SAAmC;AAiEzC,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}