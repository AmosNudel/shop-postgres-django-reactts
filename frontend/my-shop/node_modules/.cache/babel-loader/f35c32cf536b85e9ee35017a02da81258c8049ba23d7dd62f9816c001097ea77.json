{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nudel\\\\OneDrive\\\\Documents\\\\JohnBryceProjects\\\\lesson26HW\\\\frontend\\\\my-shop\\\\src\\\\bodyComponents\\\\CartComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Define a type for the cart item structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartComponent = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [totalSum, setTotalSum] = useState(0);\n\n  // This function loads the cart items from localStorage and updates the state\n  const loadCartItems = () => {\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n\n    // Group cart items by product name and sum their prices\n    const groupedItems = cart.reduce((acc, item) => {\n      if (acc[item.name]) {\n        acc[item.name].amount += item.amount;\n        acc[item.name].totalPrice += item.totalPrice;\n      } else {\n        acc[item.name] = {\n          ...item\n        };\n      }\n      return acc;\n    }, {});\n\n    // Convert the grouped object to an array of items\n    const updatedCartItems = Object.values(groupedItems);\n\n    // Calculate the total sum of the cart\n    const total = updatedCartItems.reduce((sum, item) => sum + item.totalPrice, 0);\n    setCartItems(updatedCartItems);\n    setTotalSum(total);\n  };\n\n  // Add a new item to the cart and update localStorage\n  const handleAddItem = newItem => {\n    const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    const existingItemIndex = cart.findIndex(item => item.name === newItem.name);\n    if (existingItemIndex > -1) {\n      // Item already exists, update the amount and totalPrice\n      cart[existingItemIndex].amount += newItem.amount;\n      cart[existingItemIndex].totalPrice += newItem.totalPrice;\n    } else {\n      // Item doesn't exist, add it to the cart\n      cart.push(newItem);\n    }\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // After updating localStorage, reload the cart\n    loadCartItems();\n  };\n\n  // This useEffect loads the cart when the component mounts\n  useEffect(() => {\n    loadCartItems(); // Initial load when component mounts\n  }, []); // Initial load on mount\n\n  // Add this useEffect to listen for changes to localStorage and re-load the cart\n  useEffect(() => {\n    const handleStorageChange = () => {\n      loadCartItems(); // Re-load the cart after storage change\n    };\n    window.addEventListener('storage', handleStorageChange);\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []);\n  const handleRemoveItem = name => {\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    cart = cart.filter(item => item.name !== name);\n    localStorage.setItem('cart', JSON.stringify(cart));\n    loadCartItems(); // Manually reload the cart after removing an item\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Shopping Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Amount: \", item.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", item.totalPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleRemoveItem(item.name),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-sum\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total: $\", totalSum.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(CartComponent, \"BCVntg0IqRLcZmSuosZ5+n8pLuA=\");\n_c = CartComponent;\nexport default CartComponent;\nvar _c;\n$RefreshReg$(_c, \"CartComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CartComponent","_s","cartItems","setCartItems","totalSum","setTotalSum","loadCartItems","cart","JSON","parse","localStorage","getItem","groupedItems","reduce","acc","item","name","amount","totalPrice","updatedCartItems","Object","values","total","sum","handleAddItem","newItem","existingItemIndex","findIndex","push","setItem","stringify","handleStorageChange","window","addEventListener","removeEventListener","handleRemoveItem","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","className","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/nudel/OneDrive/Documents/JohnBryceProjects/lesson26HW/frontend/my-shop/src/bodyComponents/CartComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Define a type for the cart item structure\r\ninterface CartItem {\r\n  name: string;\r\n  amount: number;\r\n  totalPrice: number;\r\n}\r\n\r\nconst CartComponent: React.FC = () => {\r\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\r\n  const [totalSum, setTotalSum] = useState<number>(0);\r\n\r\n  // This function loads the cart items from localStorage and updates the state\r\n  const loadCartItems = () => {\r\n    const cart: CartItem[] = JSON.parse(localStorage.getItem('cart') || '[]');\r\n\r\n    // Group cart items by product name and sum their prices\r\n    const groupedItems: { [key: string]: CartItem } = cart.reduce((acc, item) => {\r\n      if (acc[item.name]) {\r\n        acc[item.name].amount += item.amount;\r\n        acc[item.name].totalPrice += item.totalPrice;\r\n      } else {\r\n        acc[item.name] = { ...item };\r\n      }\r\n      return acc;\r\n    }, {} as { [key: string]: CartItem });\r\n\r\n    // Convert the grouped object to an array of items\r\n    const updatedCartItems = Object.values(groupedItems);\r\n\r\n    // Calculate the total sum of the cart\r\n    const total = updatedCartItems.reduce((sum, item) => sum + item.totalPrice, 0);\r\n\r\n    setCartItems(updatedCartItems);\r\n    setTotalSum(total);\r\n  };\r\n\r\n  // Add a new item to the cart and update localStorage\r\n  const handleAddItem = (newItem: CartItem) => {\r\n    const cart: CartItem[] = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    const existingItemIndex = cart.findIndex(item => item.name === newItem.name);\r\n\r\n    if (existingItemIndex > -1) {\r\n      // Item already exists, update the amount and totalPrice\r\n      cart[existingItemIndex].amount += newItem.amount;\r\n      cart[existingItemIndex].totalPrice += newItem.totalPrice;\r\n    } else {\r\n      // Item doesn't exist, add it to the cart\r\n      cart.push(newItem);\r\n    }\r\n\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n    // After updating localStorage, reload the cart\r\n    loadCartItems();\r\n  };\r\n\r\n  // This useEffect loads the cart when the component mounts\r\n  useEffect(() => {\r\n    loadCartItems(); // Initial load when component mounts\r\n  }, []); // Initial load on mount\r\n\r\n  // Add this useEffect to listen for changes to localStorage and re-load the cart\r\n  useEffect(() => {\r\n    const handleStorageChange = () => {\r\n      loadCartItems(); // Re-load the cart after storage change\r\n    };\r\n\r\n    window.addEventListener('storage', handleStorageChange);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  const handleRemoveItem = (name: string) => {\r\n    let cart: CartItem[] = JSON.parse(localStorage.getItem('cart') || '[]');\r\n    cart = cart.filter((item) => item.name !== name);\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n\r\n    loadCartItems(); // Manually reload the cart after removing an item\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Shopping Cart</h2>\r\n      {cartItems.length === 0 ? (\r\n        <p>Your cart is empty</p>\r\n      ) : (\r\n        <ul>\r\n          {cartItems.map((item) => (\r\n            <li key={item.name}>\r\n              <h3>{item.name}</h3>\r\n              <p>Amount: {item.amount}</p>\r\n              <p>Price: ${item.totalPrice}</p>\r\n              <button onClick={() => handleRemoveItem(item.name)}>Remove</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div className=\"total-sum\">\r\n        <h3>Total: ${totalSum.toFixed(2)}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}