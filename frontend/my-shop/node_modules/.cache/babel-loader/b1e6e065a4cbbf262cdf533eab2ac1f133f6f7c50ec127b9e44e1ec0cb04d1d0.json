{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nudel\\\\OneDrive\\\\Documents\\\\JohnBryceProjects\\\\lesson26HW\\\\frontend\\\\my-shop\\\\src\\\\headerComponents\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // To store messages\n  const [token, setToken] = useState(null); // To store the token after successful login\n  const SERVER = 'http://127.0.0.1:8000/';\n\n  // Login function\n  const login = () => {\n    axios.post(SERVER + \"login/\", {\n      username,\n      password\n    }).then(res => {\n      console.log(\"Response data:\", res.data); // Log the full response data\n      const {\n        access,\n        username: returnedUsername\n      } = res.data; // Assuming username is in response data\n      console.log(\"Token:\", access); // Log the token\n      console.log(\"Username:\", returnedUsername); // Log the username from the response\n      setToken(access); // Store the token\n      setMessage(`Welcome back, ${username}!`); // Show welcome message\n    }).catch(error => {\n      setMessage(\"Wrong username or password.\"); // Show error message\n      console.log(error); // Log the error for debugging\n    });\n  };\n  const register = () => {\n    axios.post(SERVER + \"register/\", {\n      username,\n      password\n    }).then(res => {\n      console.log(\"Response data:\", res.data); // Log the full response data\n      const {\n        access,\n        username: returnedUsername\n      } = res.data; // Assuming username is in response data\n      console.log(\"Token:\", access); // Log the token\n      console.log(\"Username:\", returnedUsername); // Log the username from the response\n      setToken(access); // Store the token\n      setMessage(`Nice to meet you, ${username}!`); // Show registration message\n    }).catch(error => {\n      setMessage(\"Registration failed. Please try again.\"); // Error during registration\n      console.log(error); // Log the error for debugging\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"WAhCjyEMA8B5/CLfeGBXVDQG388=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Login","_s","password","setPassword","username","setUsername","message","setMessage","token","setToken","SERVER","login","post","then","res","console","log","data","access","returnedUsername","catch","error","register","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nudel/OneDrive/Documents/JohnBryceProjects/lesson26HW/frontend/my-shop/src/headerComponents/Login.tsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");  // To store messages\r\n    const [token, setToken] = useState(null);    // To store the token after successful login\r\n    const SERVER = 'http://127.0.0.1:8000/';\r\n\r\n    // Login function\r\n    const login = () => {\r\n        axios.post(SERVER + \"login/\", { username, password })\r\n            .then(res => {\r\n                console.log(\"Response data:\", res.data);  // Log the full response data\r\n                const { access, username: returnedUsername } = res.data; // Assuming username is in response data\r\n                console.log(\"Token:\", access);   // Log the token\r\n                console.log(\"Username:\", returnedUsername);  // Log the username from the response\r\n                setToken(access);    // Store the token\r\n                setMessage(`Welcome back, ${username}!`); // Show welcome message\r\n            })\r\n            .catch(error => {\r\n                setMessage(\"Wrong username or password.\"); // Show error message\r\n                console.log(error); // Log the error for debugging\r\n            });\r\n    };\r\n\r\n    const register = () => {\r\n        axios.post(SERVER + \"register/\", { username, password })\r\n            .then(res => {\r\n                console.log(\"Response data:\", res.data);  // Log the full response data\r\n                const { access, username: returnedUsername } = res.data; // Assuming username is in response data\r\n                console.log(\"Token:\", access);   // Log the token\r\n                console.log(\"Username:\", returnedUsername);  // Log the username from the response\r\n                setToken(access);    // Store the token\r\n                setMessage(`Nice to meet you, ${username}!`); // Show registration message\r\n            })\r\n            .catch(error => {\r\n                setMessage(\"Registration failed. Please try again.\"); // Error during registration\r\n                console.log(error); // Log the error for debugging\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                Username: <input onChange={(e) => setUsername(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                Password: <input type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n            </div>\r\n            <div>\r\n                <button onClick={login}>Login</button>\r\n                <button onClick={register}>Register</button>\r\n            </div>\r\n            <hr />\r\n            {message && <h2>{message}</h2>} {/* Display the message (either error or welcome message) */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}